// <auto-generated />
using System;
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Context.Migrations
{
    [DbContext(typeof(PracticomContext))]
    [Migration("20230212163545_addMotherId2")]
    partial class addMotherId2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Repository.Entity.FatherAndChild", b =>
                {
                    b.Property<int>("FatherAndChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FatherAndChildId"));

                    b.Property<int?>("ChildId")
                        .HasColumnType("int")
                        .HasColumnName("childId");

                    b.Property<int?>("FatherId")
                        .HasColumnType("int")
                        .HasColumnName("fatherId");

                    b.Property<int?>("MotherId")
                        .HasColumnType("int")
                        .HasColumnName("motherId");

                    b.HasKey("FatherAndChildId");

                    b.HasIndex("ChildId");

                    b.HasIndex("FatherId");

                    b.HasIndex("MotherId");

                    b.ToTable("FatherAndChild", (string)null);
                });

            modelBuilder.Entity("Repository.Entity.Hmo", b =>
                {
                    b.Property<int>("Hmoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HMOId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hmoid"));

                    b.Property<string>("Hmoname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("HMOName");

                    b.HasKey("Hmoid");

                    b.ToTable("HMOs", (string)null);
                });

            modelBuilder.Entity("Repository.Entity.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("personId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("firstName");

                    b.Property<int?>("Hmoid")
                        .HasColumnType("int")
                        .HasColumnName("HMOid");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(9)
                        .HasColumnType("nchar(9)")
                        .HasColumnName("idNumber")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastName");

                    b.Property<bool?>("MaleOrFemale")
                        .HasColumnType("bit");

                    b.HasKey("PersonId");

                    b.HasIndex("Hmoid");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Repository.Entity.FatherAndChild", b =>
                {
                    b.HasOne("Repository.Entity.Person", "Child")
                        .WithMany("FatherAndChildChildren")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_FatherAndChild_Persons1");

                    b.HasOne("Repository.Entity.Person", "Father")
                        .WithMany("FatherAndChildFathers")
                        .HasForeignKey("FatherId")
                        .HasConstraintName("FK_FatherAndChild_Persons");

                    b.HasOne("Repository.Entity.Person", "Mother")
                        .WithMany("FatherAndChildMothers")
                        .HasForeignKey("MotherId")
                        .HasConstraintName("FK_FatherAndChild_Persons2");

                    b.Navigation("Child");

                    b.Navigation("Father");

                    b.Navigation("Mother");
                });

            modelBuilder.Entity("Repository.Entity.Person", b =>
                {
                    b.HasOne("Repository.Entity.Hmo", "Hmo")
                        .WithMany("People")
                        .HasForeignKey("Hmoid")
                        .HasConstraintName("FK_Persons_HMOs");

                    b.Navigation("Hmo");
                });

            modelBuilder.Entity("Repository.Entity.Hmo", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("Repository.Entity.Person", b =>
                {
                    b.Navigation("FatherAndChildChildren");

                    b.Navigation("FatherAndChildFathers");

                    b.Navigation("FatherAndChildMothers");
                });
#pragma warning restore 612, 618
        }
    }
}
